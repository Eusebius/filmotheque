<?php

namespace Eusebius\Filmotheque;
require_once(__DIR__.'/../../../Eusebius/Filmotheque/Auth.php');

/**
 * Generated by PHPUnit_SkeletonGenerator on 2016-03-05 at 16:40:21.
 */
class AuthTest extends \PHPUnit_Framework_TestCase {

    /**
     * @var Auth
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->object = new Auth;
        $this->passwords = array(
            'testPassword',
            'azerty123"~%éà@',
            '',
            '0x00654qsdf',
            '0e123456',
            '<br />\' <script language="javascript">'
            );
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::encryptPassword
     * @todo   Implement testEncryptPassword().
     */
    public function testEncryptPassword() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::checkPassword
     * @todo   Implement testCheckPassword().
     */
    public function testCheckPassword() {
        foreach($this->passwords as $pwd) {
            $enc = $this->object->encryptPassword($pwd);
            $enc2 = $this->object->encryptPassword($pwd . ' ');
            $this->assertTrue($this->object->checkPassword($pwd, $enc));
            $this->assertFalse($this->object->checkPassword($pwd, $enc2));
        }
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::authenticateUser
     * @todo   Implement testAuthenticateUser().
     */
    public function testAuthenticateUser() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::ensureAuthenticated
     * @todo   Implement testEnsureAuthenticated().
     */
    public function testEnsureAuthenticated() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::ensureRole
     * @todo   Implement testEnsureRole().
     */
    public function testEnsureRole() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::ensurePermission
     * @todo   Implement testEnsurePermission().
     */
    public function testEnsurePermission() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::hasRole
     * @todo   Implement testHasRole().
     */
    public function testHasRole() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::getRoles
     * @todo   Implement testGetRoles().
     */
    public function testGetRoles() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::hasPermission
     * @todo   Implement testHasPermission().
     */
    public function testHasPermission() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::getPermissions
     * @todo   Implement testGetPermissions().
     */
    public function testGetPermissions() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::isAuthenticated
     * @todo   Implement testIsAuthenticated().
     */
    public function testIsAuthenticated() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    /**
     * @covers Eusebius\Filmotheque\Auth::disconnect
     * @todo   Implement testDisconnect().
     */
    public function testDisconnect() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

}
